[build-system]
requires = [
    "setuptools",
    "setuptools-scm<8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rubin-scheduler"
description = "Scheduling algorithms for Vera C. Rubin Observatory's Legacy Survey of Space and Time (LSST)."
readme = "README.md"
license = { file = "LICENSE" }
keywords = [
    "rubin",
    "lsst",
]
classifiers = [ 
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Astronomy",
 ]
urls = {documentation = "https://rubin-scheduler.lsst.io", repository = "https://github.com/lsst/rubin_scheduler" }
dynamic = [ "version" ]
dependencies = [
    "numpy",
    "matplotlib",
    "healpy",
    "numexpr",
    "scipy",
    "astropy",
    "tables",
    "h5py",
    "requests",
    "shapely",
    "tqdm",
]

[project.optional-dependencies]
test = [
     "pytest",
     "black",
     "ruff",
     "isort",
     "pytest-cov",
     "pytest-black",
]
dev = [
  "documenteer[guide]",
]

[project.scripts]
scheduler_download_data = "rubin_scheduler.data.scheduler_download_data:scheduler_download_data"
rs_download_sky = "rubin_scheduler.data.rs_download_sky:rs_download_sky"


[tool.setuptools.dynamic]
version = { attr = "setuptools_scm.get_version" }

[tool.setuptools.packages.find]
where = [ "" ]

[tool.setuptools_scm]
#version_file = "rubin_scheduler/version.py"
write_to = "rubin_scheduler/version.py"
write_to_template = """
# Generated by setuptools_scm
__all__ = ["__version__"]
__version__ = "{version}"
"""

[tool.pytest.ini_options]
addopts = "--black --ignore-glob=*/version.py --ignore-glob=*data_dir/*"

[tool.mypy]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"
exclude = "version.py"

[tool.black]
line-length = 110
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 110
skip = ["docs/conf.py"]

[tool.ruff]
exclude = [
    "__init__.py",
]
ignore = [
    "N802",
    "N803",
    "N806",
    "N812",
    "N815",
    "N816",
    "N999",
    "D107",
    "D105",
    "D102",
    "D104",
    "D100",
    "D200",
    "D205",
    "D400",
    "E712",
]
line-length = 110
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "N",  # pep8-naming
    "W",  # pycodestyle
]
target-version = "py311"
extend-select = [
    "RUF100", # Warn about unused noqa
]

[tool.ruff.pycodestyle]
max-doc-length = 110

[tool.ruff.pydocstyle]
convention = "numpy"

